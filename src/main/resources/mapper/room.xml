<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoytrip.room.model.mapper.RoomMapper">

  <resultMap type="room" id="room">
    <result column="room_id" property="id"/>
    <result column="owner_id" property="ownerId"/>
    <result column="room_name" property="roomName"/>
    <result column="address" property="address"/>
    <result column="introduce" property="introduce"/>
    <result column="price_per_night" property="pricePerNight"/>
    <result column="createdat" property="createdat"/>
    <result column="updatedat" property="updatedat"/>
  </resultMap>

  <select id="findAll" resultMap="room">
    SELECT *
    FROM room
  </select>

  <select id="findAllWithPicture" resultType="com.ssafy.enjoytrip.room.model.dto.response.RoomListResponseDto">
    SELECT r.room_id, r.room_name, r.address, r.price_per_night, MIN(rp.picture) AS picture, COALESCE(AVG(rev.rating), 0) AS rating
    FROM room r
           INNER JOIN room_picture rp ON r.room_id = rp.room_id
           LEFT JOIN review rev ON r.room_id = rev.room_id
    GROUP BY r.room_id, r.owner_id, r.room_name, r.address, r.price_per_night
    ORDER BY r.createdat DESC
  </select>

  <select id="findAllByKeywordWithPicture" resultType="com.ssafy.enjoytrip.room.model.dto.response.RoomListResponseDto">
    SELECT r.room_id, r.room_name, r.address, r.price_per_night, MIN(rp.picture) AS picture
    FROM room r
           INNER JOIN room_picture rp ON r.room_id = rp.room_id
    WHERE r.room_name LIKE CONCAT('%', #{keyword}, '%') OR r.address LIKE CONCAT('%', #{keyword}, '%')
    GROUP BY r.room_id, r.owner_id, r.room_name, r.address, r.price_per_night
    ORDER BY r.createdat DESC
  </select>

  <select id="findById" resultMap="room">
    SELECT *
    FROM room
    WHERE room_id = #{id}
  </select>

  <insert id="save" parameterType="RoomCreateRequestDto" useGeneratedKeys="true" keyProperty="id">
    insert into room(owner_id, room_name, address, introduce, price_per_night)
    values(#{ownerId}, #{roomName}, #{address}, #{introduce}, #{pricePerNight})
  </insert>

  <update id="update" parameterType="RoomUpdateRequestDto">
    UPDATE room
    <trim prefix="SET" suffixOverrides=",">
      <if test="roomName != null">room_name = #{roomName},</if>
      <if test="address != null">address = #{address},</if>
      <if test="introduce != null">introduce = #{introduce},</if>
      <if test="pricePerNight != null">price_per_night = #{pricePerNight},</if>
      <if test="true"> updatedat = CURRENT_TIMESTAMP, </if>
    </trim>
    WHERE room_id = #{id};
  </update>

  <delete id="delete">
    DELETE FROM ROOM
    WHERE room_id = #{id};
  </delete>

</mapper>